body {
    margin: 0;
}
  
::-webkit-scrollbar {
    width: 12px;
    height: 12px;
}

::-webkit-scrollbar-thumb {
    background: #888;
    border-radius: 6px;
    border: 3px solid #f0f0f0;
}
::-webkit-scrollbar-track {
    background: #f0f0f0;
    border-radius: 6px;
}
.webgl-background_container__Ojc1v {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100vh;
    z-index: -1;
    background-repeat: repeat;
}
canvas {
    width: 100%;
    height: 100%;
}


.webgl-background_container__Ojc1v {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100vh;
    height: 100lvh;
    overflow: hidden;
    z-index: 1
}

.webgl-background_container__Ojc1v[data-position=absolute] {
    position: absolute;
    height: 100%
}

.webgl-background_container__Ojc1v[data-dark-background=true]:before {
    opacity: .2
}

.webgl-background_container__Ojc1v[data-noise=false]:before {
    display: none
}

.webgl-background_container__Ojc1v:before {
    content: "";
    position: fixed;
    background-image: url(/img/);
    background-repeat: repeat;
    inset: -10rem;
    animation: webgl-background_noise__uxurv 1.5s steps(2) .01s infinite;
    animation-play-state: running;
    opacity: var(--opacity);
    pointer-events: none;
    z-index: 10
}

.webgl-background_container__Ojc1v canvas {
    display: block
}

@keyframes webgl-background_noise__uxurv {
    0% {
        transform: translate3d(0,9rem,0)
    }

    10% {
        transform: translate3d(-1rem,-4rem,0)
    }

    20% {
        transform: translate3d(-8rem,2rem,0)
    }

    30% {
        transform: translate3d(9rem,-9rem,0)
    }

    40% {
        transform: translate3d(-2rem,7rem,0)
    }

    50% {
        transform: translate3d(-9rem,-4rem,0)
    }

    60% {
        transform: translate3d(2rem,6rem,0)
    }

    70% {
        transform: translate3d(7rem,-8rem,0)
    }

    80% {
        transform: translate3d(-9rem,1rem,0)
    }

    90% {
        transform: translate3d(6rem,-5rem,0)
    }

    to {
        transform: translate3d(-7rem,0,0)
    }
}
